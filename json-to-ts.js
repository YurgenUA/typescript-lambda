const { readFileSync, writeFileSync, mkdirSync, existsSync, readdirSync } = require('fs');
const path = require('path');
const { compile } = require('json-schema-to-typescript');

const inputJsonPath = process.argv[2];
const outputTsPath = process.argv[3];
console.log({ inputJsonPath, outputTsPath });

const prepareSchema = (schema) => {
  if (typeof schema === 'object') {
    schema.format === 'date-time' ? schema.tsType = 'Date' : Object.values(schema).map(prepareSchema);
  }
  return schema;
};

const bannerComment = `
/* eslint-disable */
/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run json-schema-to-typescript to regenerate this file.
*/
`;

async function generate() {
  if (!existsSync(outputTsPath)) {
    mkdirSync(outputTsPath, {recursive: true});
  }
  const files = readdirSync(inputJsonPath);
  for (const fileName of files) {
    const schema = JSON.parse(readFileSync(path.join(inputJsonPath, fileName)).toString());
    const outputFileName = schema.title + '.ts';
    writeFileSync(path.join(outputTsPath, outputFileName), await compile(prepareSchema(schema), '', {
      bannerComment: bannerComment,
      style: {
        singleQuote: true,
      },
      cwd: 'schema',
      ignoreMinAndMaxItems: true
    }), { flag: 'w' });
  }

  return 'TS models were generated.';
}

generate()
  .then(console.log)
  .catch(console.error);
